/**
 * (C) Copyright IBM Corp. 2025.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Usage } from '../tokens';

/**
 * An embedding in an embedding vector.
 */
export interface Embedding {
  /** Embedding vector, which is a list of floats or a base64 string.
   *  The length of vector depends on the model. For OpenAI's models, as listed in their [embedding guide].
   *
   *  [embedding guide]: https://platform.openai.com/docs/guides/embeddings.
   */
  embedding: number[];
  /** Index of the embedding in the list of embeddings. */
  index: number;
  /** Object type, which is always `"embedding"`. */
  object: Embedding.Constants.Object | string;
}
export namespace Embedding {
  export namespace Constants {
    /** Object type, which is always `"embedding"`. */
    export enum Object {
      EMBEDDING = 'embedding',
    }
  }
}

/**
 * An embeddings response generated by a model.
 */
export interface EmbeddingResponse {
  /** A list of embedding objects generated by the model. */
  data: Embedding[];
  /** The ID of the model used to create the embeddings. The same as the `model` provided in the request. */
  model: string;
  /** Object type, which is always `"list"`. */
  object: EmbeddingResponse.Constants.Object | string;
  /** Usage information for a model request. */
  usage?: Usage;
}
export namespace EmbeddingResponse {
  export namespace Constants {
    /** Object type, which is always `"list"`. */
    export enum Object {
      LIST = 'list',
    }
  }
}
